{"version":3,"sources":["components/Header/Nav.tsx","components/Header/Header.tsx","components/FirstSection/FirstSection.tsx","components/SecondSection/SecondSection.tsx","components/UsersSetion/User.tsx","api/api.ts","redux/reducers/usersReducer.ts","components/UsersSetion/Users.tsx","redux/reducers/positionsReducer.ts","components/RegisterSection/RegisterForm.tsx","components/RegisterSection/RegisterSection.tsx","components/Footer/Footer.tsx","App.tsx","redux/reducers/navReducer.ts","redux/store.ts","serviceWorker.ts","index.tsx","assets/logo.svg","assets/man-laptop-v1.svg","assets/Spinner.svg"],"names":["NavItem","props","className","to","link","name","NavContainer","connect","state","navItems","navigation","map","navLink","key","id","Header","src","logo","alt","FirstSection","SecondSection","manLaptop","User","useEffect","window","setTimeout","Bootstrap","tooltip","photo","placement","title","position","email","boundary","phone","instance","axios","baseURL","initialState","users","page","total_pages","total_users","count","links","next_url","prev_url","is_loading","setUsersActionCreator","data","type","loading","loaded","usersReducer","action","mapDispatchToProps","setUsers","dispatch","nextPage","then","response","UsersContainer","user","spinner","onClick","positions","setPositionsActionCreator","positionsReducer","setPositions","get","RegisterFormContainer","Group","htmlFor","Input","placeholder","Text","text","CustomRadio","style","CustomFile","RegisterSection","Footer","App","navReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","Boolean","location","hostname","match","renderDOM","ReactDOM","render","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e591fff4.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../index.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {NavItemType, NavStateType} from \"../../redux/reducers/navReducer\";\r\n\r\nconst NavItem : React.FC<NavItemType> = (props) =>{\r\n    return (\r\n      <div className={\"nav-item\"}>\r\n        <NavLink to={props.link}>{props.name}</NavLink>\r\n      </div>\r\n    );\r\n}\r\nlet Nav : React.FC<NavStateType> = (props) => {\r\n    return (\r\n        <nav className=\"top-nav\">\r\n            {props.navItems.map((navLink:NavItemType) => {\r\n                return <NavItem key={navLink.id} {...navLink}/>\r\n            })}\r\n\r\n        </nav>\r\n    );\r\n}\r\nconst mapStateToProps = (state : any) => {\r\n    return {\r\n        navItems: state.navigation.navItems\r\n    }\r\n}\r\nlet NavContainer = connect(mapStateToProps)(Nav)\r\nexport default NavContainer;","import React from 'react';\r\nimport '../../index.scss';\r\nimport logo from \"../../assets/logo.svg\";\r\nimport Nav from \"./Nav\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"_container header\">\r\n            <div className=\"logo-wrapper\">\r\n                <img src={logo} alt=\"\"/>\r\n            </div>\r\n            <Nav/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst FirstSection = () => {\r\n    return (\r\n        <div className={\"section first_section\"}>\r\n            <div className={\"_container\"}>\r\n                <h1>\r\n                    Test assignment\r\n                    for Frontend Developer position\r\n                </h1>\r\n                <p>\r\n                    We kindly remind you that your test assignment should be submitted as a link to github/bitbucket repository. Please be patient, we consider and respond to every application that meets minimum requirements. We look forward to your submission. Good luck! The photo has to scale in the banner area on the different screens\r\n                </p>\r\n                <button className={'_btn'}>Sing up now</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FirstSection;","import React from \"react\";\r\nimport manLaptop from \"../../assets/man-laptop-v1.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst SecondSection = () => {\r\n    return (\r\n        <div className={\"_container section second_section\"}>\r\n            <div className=\"_row\">\r\n                <h1>Let's get acquainted</h1>\r\n            </div>\r\n            <div className=\"_row bottom-row\">\r\n                <div className=\"photo-wrapper\">\r\n                    <img src={manLaptop} alt=\"\"/>\r\n                </div>\r\n                <div className=\"description-wrapper\">\r\n                    <h3>I am cool frontend developer</h3>\r\n                    <p>We will evaluate how clean your approach to writing CSS and Javascript code is. You can use any CSS and Javascript 3rd party libraries without any restriction.</p>\r\n                    <p className={\"last-text\"}>If 3rd party css/javascript libraries are added to the project via bower/npm/yarn you will get bonus points. If you use any task runner (gulp/webpack) you will get bonus points as well. Slice service directory page P​SD mockup​ into HTML5/CSS3. </p>\r\n                    <NavLink className={'link'} to={\"/\"}>Sing up now</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SecondSection;","import React, {useEffect} from \"react\";\r\n// @ts-ignore\r\nimport Bootstrap, { BP } from \"bootstrap-4-react\";\r\nimport {UserType} from \"../../redux/reducers/usersReducer\";\r\n\r\n\r\nconst User : React.FC<UserType>= (props) => {\r\n    useEffect(() => {\r\n        window.setTimeout(() => Bootstrap.tooltip('.user p'), 1000);\r\n    },[])\r\n    return (\r\n        <div className={\"user\"}>\r\n            <div className=\"photo\">\r\n                <img src={props.photo} alt=\"\"/>\r\n            </div>\r\n            <div className=\"name\">\r\n                <BP tooltip={{ placement: 'bottom', title: props.name }} >{props.name}</BP>\r\n            </div>\r\n            <div className=\"position description\">\r\n                {props.position}\r\n            </div>\r\n            <div className=\"email description\">\r\n                <BP tooltip={{ placement: 'bottom', title: props.email, boundary: 'window' }}> {props.email} </BP>\r\n            </div>\r\n            <div className=\"phone description\">\r\n                {props.phone}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import * as axios from 'axios';\r\n\r\n// @ts-ignore\r\nconst instance = axios.create({\r\n    baseURL: \"https://frontend-test-assignment-api.abz.agency/api/v1\"\r\n});\r\n\r\ntype ResponseType = {\r\n    data: object\r\n}\r\n\r\n// @ts-ignore\r\nexport let getUsers = (nextPage: string) => axios.get( `${nextPage}`).then((response:ResponseType) => response.data);\r\n\r\nexport let getPositions = () => instance.get('/positions').then((response:ResponseType) => response.data);","import {getUsers} from \"../../api/api\";\r\n\r\nconst SET_USERS = \"SET_USERS\";\r\nconst LOADING   = \"LOADING\";\r\nconst LOADED    = \"LOADED\";\r\n\r\n// Generics\r\nexport type UserResponseType = {\r\n\r\n}\r\nexport type UserType = {\r\n    id: number,\r\n    name: string,\r\n    email: string,\r\n    phone: string,\r\n    position: string,\r\n    position_id: number,\r\n    registration_timestamp: number,\r\n    photo: string\r\n}\r\nexport interface UserStateType  {\r\n    users: Array<UserType>,\r\n    page? : number,\r\n    total_pages?: number,\r\n    total_users?: number,\r\n    count?: number,\r\n    links?: object,\r\n    is_loading: boolean\r\n}\r\ntype ActionType = {\r\n    type: string,\r\n    data: UserStateType\r\n}\r\n\r\n// initial state\r\nlet initialState : UserStateType = {\r\n    users : [],\r\n    page: 0,\r\n    total_pages: 0,\r\n    total_users: 0,\r\n    count: 0,\r\n    links: {\r\n        next_url: \"https://frontend-test-assignment-api.abz.agency/api/v1/users?page=1&count=5\",\r\n        prev_url: null\r\n    },\r\n    is_loading: false\r\n};\r\n\r\n//reducer\r\nlet usersReducer = (state = initialState, action:ActionType)  : UserStateType => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            state = {\r\n                ...state, users: [...state.users, ...action.data.users], page: action.data.page, total_pages: action.data.total_pages,\r\n                total_users: action.data.total_users, count: action.data.count, links: {...action.data.links}\r\n            }\r\n            break;\r\n        case LOADING:\r\n            state = {...state, is_loading: true };\r\n            break;\r\n\r\n        case LOADED:\r\n            state = {...state, is_loading: false };\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\n//thunks\r\nexport const setUsersThunkCreator = (next_url:string) => (dispatch:Function) => {\r\n    dispatch(loading());\r\n    getUsers(next_url).then((data:UserStateType)=>{\r\n        dispatch(loaded());\r\n        dispatch(setUsersActionCreator(data));\r\n    });\r\n}\r\n\r\n// action creators\r\nexport const setUsersActionCreator = (data:UserStateType) => {\r\n    return {\r\n        type: SET_USERS,\r\n        data\r\n    }\r\n}\r\nexport const loading = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}\r\nexport const loaded = () => {\r\n    return {\r\n        type: LOADED\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useEffect} from \"react\";\r\nimport User from \"./User\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUsersThunkCreator, UserStateType, UserType} from \"../../redux/reducers/usersReducer\";\r\nimport spinner from \"../../assets/Spinner.svg\";\r\n\r\ninterface IUsersProps extends UserStateType {\r\n    next_url: string,\r\n    setUsers: (next_url : string) => void,\r\n}\r\n\r\nconst Users : React.FC<IUsersProps> = (props) => {\r\n    useEffect(() => {\r\n        props.setUsers(props.next_url);\r\n    },[]);\r\n    return (\r\n        <div className={\"_container section users-wrapper\"}>\r\n            <h1>Our cheerful users</h1>\r\n            <h5>Attention! Sorting users by registration date</h5>\r\n            <div className=\"users\">\r\n                { props.users.map((user : UserType) => <User key={user.id} {...user}/>)}\r\n                {   props.is_loading &&\r\n                    <div className={\"spinner\"}>\r\n                        <img src={spinner}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            {\r\n                props.next_url && <button className={\"_btn\"} onClick={() => {props.setUsers(props.next_url)}}>Show more</button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state : any) => {\r\n  return {\r\n      users : state.usersReducer.users,\r\n      next_url: state.usersReducer.links.next_url,\r\n      is_loading:state.usersReducer.is_loading\r\n  }\r\n};\r\nconst mapDispatchToProps  = {\r\n    setUsers: setUsersThunkCreator\r\n};\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\r\nexport default UsersContainer;","import {getPositions} from \"../../api/api\";\r\nimport {act} from \"react-dom/test-utils\";\r\nimport {UserStateType} from \"./usersReducer\";\r\n\r\n\r\nexport type PositionType = {\r\n    id      : number,\r\n    name    : string\r\n}\r\nexport type PositionStateType = {\r\n    success? : boolean,\r\n    positions: Array<PositionType>\r\n}\r\ntype ActionType = {\r\n    type: string,\r\n    data: PositionStateType\r\n}\r\n\r\nlet initialState : PositionStateType = {\r\n    positions : []\r\n};\r\n\r\nconst SET_POSITIONS = \"SET_POSITIONS\";\r\n\r\nlet positionsReducer = (state = initialState, action : ActionType) => {\r\n    switch (action.type) {\r\n        case SET_POSITIONS:\r\n            state = {...state, positions: [...action.data.positions]}\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const setPositionsThunkCreator = () => (dispatch:any) => {\r\n    getPositions().then((data: ActionType)=>{\r\n        dispatch(setPositionsActionCreator(data));\r\n    });\r\n}\r\n\r\nexport const setPositionsActionCreator = (data: ActionType) => {\r\n    return {\r\n        type: SET_POSITIONS,\r\n        data\r\n    }\r\n}\r\nexport default positionsReducer;","import React, {useEffect} from \"react\";\r\n// @ts-ignore\r\nimport { Form } from 'bootstrap-4-react';\r\nimport {connect} from \"react-redux\";\r\nimport {PositionType, setPositionsThunkCreator} from \"../../redux/reducers/positionsReducer\";\r\n\r\ninterface IRegisterFormProps {\r\n    positions: Array<PositionType>,\r\n    setPositions: Function\r\n}\r\n\r\nconst RegisterForm : React.FC<IRegisterFormProps> = (props) => {\r\n    const mtd_12 = {\r\n        'margin-top': '-12px'\r\n    }\r\n    useEffect(() => {\r\n        props.setPositions();\r\n    },[]);\r\n    return (\r\n        <Form>\r\n            <Form.Group>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Form.Input type=\"text\" id=\"name\" placeholder=\"Your name\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Form.Input type=\"email\" id=\"email\" placeholder=\"Your email\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <label htmlFor=\"phone\">Phone number</label>\r\n                <Form.Input type=\"phone\" id=\"phone\" placeholder=\"+380 XX XXX XX XX\" />\r\n                <Form.Text text=\"muted\">Еnter phone number in open format</Form.Text>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <label htmlFor=\"radio\">Select your position</label>\r\n                {\r\n                    props.positions.map((position: PositionType) => <Form.CustomRadio key={position.id} id={\"Radio\" + position.id} name=\"position\">{position.name}</Form.CustomRadio>)\r\n                }\r\n            </Form.Group>\r\n            <Form.Group style={mtd_12}>\r\n                <label htmlFor=\"photo\">Photo</label>\r\n                <Form.CustomFile id=\"photo\">\r\n                   Upload your photo\r\n                </Form.CustomFile>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <button className={'_btn'}>Sing up now</button>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\nconst mapStateToProps = (state:any) => {\r\n    return {\r\n        positions: state.positionsReducer.positions\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setPositions: setPositionsThunkCreator\r\n}\r\nconst RegisterFormContainer = connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\r\nexport default RegisterFormContainer;","import React from \"react\";\r\nimport RegisterForm from \"./RegisterForm\";\r\nconst RegisterSection = () => {\r\n    return (\r\n        <div className={\"_container section register_section\"}>\r\n            <h1>Register to get a work</h1>\r\n            <h5>Attention! After successful registration and alert, update the list of users in the block from the top</h5>\r\n            <RegisterForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterSection;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            © abz.agency specially for the test task\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './index.scss';\r\nimport Header from \"./components/Header/Header\";\r\nimport FirstSection from \"./components/FirstSection/FirstSection\";\r\nimport SecondSection from \"./components/SecondSection/SecondSection\";\r\nimport Users from \"./components/UsersSetion/Users\";\r\nimport RegisterSection from \"./components/RegisterSection/RegisterSection\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nfunction App() {\r\n\r\n    // @ts-ignore\r\n    return <div className=\"App\">\r\n        <Header/>\r\n        <FirstSection/>\r\n        <SecondSection/>\r\n        <Users/>\r\n        <RegisterSection/>\r\n        <Footer/>\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","export type NavItemType = {\r\n    id: number,\r\n    name: string,\r\n    link: string\r\n}\r\nexport type NavStateType = {\r\n    navItems : Array<NavItemType>\r\n}\r\ntype ActionType = {\r\n    type: string,\r\n    data: NavStateType\r\n}\r\n\r\nlet initialState : NavStateType = {\r\n    navItems : [\r\n        {\r\n            id: 1,\r\n            name: \"About me\",\r\n            link: \"/\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Relationships\",\r\n            link: \"/\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Requirements\",\r\n            link: \"/\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Users\",\r\n            link: \"/\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Sign up\",\r\n            link: \"/\"\r\n        }\r\n    ]\r\n};\r\n\r\nlet navReducer = (state = initialState, action:ActionType) => {\r\n    return state;\r\n};\r\n\r\nexport default navReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport navReducer from \"./reducers/navReducer\";\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nimport positionsReducer from \"./reducers/positionsReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers : any = combineReducers({\r\n    navigation  : navReducer,\r\n    usersReducer,\r\n    positionsReducer\r\n});\r\n\r\nlet store : any = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nlet renderDOM = () => (ReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n));\nstore.subscribe(renderDOM);\nrenderDOM();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.146e2926.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-laptop-v1.3cdf7897.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.70caf3b6.svg\";"],"sourceRoot":""}